name: Tests

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
  pull_request:
    branches:
      - main
    paths:
      - 'src/**'
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipx
        run: python -m pip install pipx

      - name: Install poetry
        run: pipx install poetry

      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v4
        name: Define a cache for the venv based on the dependencies lock file
        with:
          key: ${{ matrix.os }}-${{ hashFiles('poetry.lock') }}
          path: ./.venv

      - name: Install the project dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest

      - name: Build
        run: poetry build

      - name: Get version
        id: version
        run: echo "version=$(poetry run python -c 'import pynyaa; print(pynyaa.__version__)')" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: pynyaa-${{ steps.version.outputs.version }}-${{ matrix.python-version }}-${{ matrix.os }}
          path: "dist/*"
